/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package clases;

import java.io.*;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Calendar;

/**
 *
 * @author user2
 */

public class Ventana extends javax.swing.JFrame {

    File historial = new File("Historial.txt");
    String txthistorial = "";
    
        

    

    public Ventana() {
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        btnExportar = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btnGoogle = new javax.swing.JButton();
        btnYouTube = new javax.swing.JButton();
        btnWiki = new javax.swing.JButton();
        btnProbandoPy = new javax.swing.JButton();
        btnFacebook = new javax.swing.JButton();
        btnTwitter = new javax.swing.JButton();
        txtUrl = new javax.swing.JTextField();
        btnIr = new javax.swing.JButton();
        cmbMail = new javax.swing.JComboBox();
        lblUrl = new javax.swing.JLabel();
        cmbProtocolo = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        btnLimpiar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtHistorial = new javax.swing.JTextArea();

        btnExportar.setText("Exportar");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane2.setName("Paginador");

        btnGoogle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Google_Chrome_Logo.png"))); // NOI18N
        btnGoogle.setBorderPainted(false);
        btnGoogle.setContentAreaFilled(false);
        btnGoogle.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Google_Chrome_Logo.png"))); // NOI18N
        btnGoogle.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Google_Chrome_Logo.png"))); // NOI18N
        btnGoogle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoogleActionPerformed(evt);
            }
        });

        btnYouTube.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/you.png"))); // NOI18N
        btnYouTube.setBorderPainted(false);
        btnYouTube.setContentAreaFilled(false);
        btnYouTube.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/you.png"))); // NOI18N
        btnYouTube.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/you.png"))); // NOI18N
        btnYouTube.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYouTubeActionPerformed(evt);
            }
        });

        btnWiki.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/wiki.jpeg"))); // NOI18N
        btnWiki.setBorderPainted(false);
        btnWiki.setContentAreaFilled(false);
        btnWiki.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWikiActionPerformed(evt);
            }
        });

        btnProbandoPy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/python.png"))); // NOI18N
        btnProbandoPy.setBorderPainted(false);
        btnProbandoPy.setContentAreaFilled(false);
        btnProbandoPy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProbandoPyActionPerformed(evt);
            }
        });

        btnFacebook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/facebook_logo.png"))); // NOI18N
        btnFacebook.setBorderPainted(false);
        btnFacebook.setContentAreaFilled(false);
        btnFacebook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFacebookActionPerformed(evt);
            }
        });

        btnTwitter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/twitter.png"))); // NOI18N
        btnTwitter.setBorderPainted(false);
        btnTwitter.setContentAreaFilled(false);
        btnTwitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTwitterActionPerformed(evt);
            }
        });

        txtUrl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUrlActionPerformed(evt);
            }
        });

        btnIr.setText("Ir");
        btnIr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIrActionPerformed(evt);
            }
        });

        cmbMail.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "email", "Hotmail", "Gmail", "Yahoo" }));
        cmbMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMailActionPerformed(evt);
            }
        });
        cmbMail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbMailKeyPressed(evt);
            }
        });

        lblUrl.setText("URL");

        cmbProtocolo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "https://", "http://" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUrl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGoogle)
                            .addComponent(btnFacebook))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnProbandoPy)
                            .addComponent(btnYouTube))
                        .addGap(143, 143, 143))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cmbProtocolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(102, 102, 102)
                                .addComponent(btnIr, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtUrl, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbMail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnWiki, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnTwitter, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(55, 55, 55))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUrl)
                    .addComponent(cmbMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIr)
                    .addComponent(cmbProtocolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGoogle)
                            .addComponent(btnWiki))
                        .addGap(14, 14, 14)
                        .addComponent(btnFacebook))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnYouTube, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnProbandoPy)
                            .addComponent(btnTwitter))))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Home", jPanel1);

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jLabel1.setText("Historial");

        txtHistorial.setColumns(20);
        txtHistorial.setEditable(false);
        txtHistorial.setRows(5);
        txtHistorial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtHistorialMouseEntered(evt);
            }
        });
        txtHistorial.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                txtHistorialMouseMoved(evt);
            }
        });
        jScrollPane2.setViewportView(txtHistorial);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpiar)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );

        jTabbedPane2.addTab("Historial", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUrlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUrlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUrlActionPerformed

    private void btnIrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIrActionPerformed
        Calendar Horario = Calendar.getInstance();
        int year = Horario.get(Calendar.YEAR);
        int mes = Horario.get(Calendar.MONTH)+1;
        int fecha = Horario.get(Calendar.DATE);
        int hora = Horario.get(Calendar.HOUR_OF_DAY);
        int minuto = Horario.get(Calendar.MINUTE);
        int segundo = Horario.get(Calendar.SECOND);
        
        FileWriter escribir = null;

        

            try {
            escribir = new FileWriter(historial, true);

               

//              [bloque paginas]

                String direccion = txtUrl.getText();

                

                escribir.write(fecha+"/"+mes+"/"+year+"   -  "+hora+":"+minuto +":"+segundo+"  ------------>"+direccion +" --\n");
                escribir.close();

                if (direccion.indexOf("https://") != -1) {
                    Desktop.getDesktop().browse(new URI("https://" + txtUrl.getText().replace("https://", "") + "/"));
                }
                if (direccion.indexOf("http://") != -1) {
                    Desktop.getDesktop().browse(new URI("http://" + txtUrl.getText().replace("https://", "") + "/"));
                } else {
                    Desktop.getDesktop().browse(new URI(cmbProtocolo.getSelectedItem() + txtUrl.getText().replace("https://", "") + "/"));
                }


//          [bloque de exepciones]      

           
           
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        } catch (URISyntaxException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                escribir.close();
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnIrActionPerformed

    private void btnGoogleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoogleActionPerformed
        Calendar Horario = Calendar.getInstance();
        int year = Horario.get(Calendar.YEAR);
        int mes = Horario.get(Calendar.MONTH)+1;
        int fecha = Horario.get(Calendar.DATE);
        int hora = Horario.get(Calendar.HOUR_OF_DAY);
        int minuto = Horario.get(Calendar.MINUTE);
        int segundo = Horario.get(Calendar.SECOND);
        
        try {
            String direccion = "www.google.com";
            
            FileWriter escribir = new FileWriter(historial, true);
            escribir.write(fecha+"/"+mes+"/"+year+"   -  "+hora+":"+minuto +":"+segundo+"  ------------>"+direccion +" --\n");
            escribir.close();
            
            Desktop.getDesktop().browse(new URI("http://www.google.com/"));
        } catch (URISyntaxException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    }//GEN-LAST:event_btnGoogleActionPerformed

    private void btnYouTubeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYouTubeActionPerformed
        Calendar Horario = Calendar.getInstance();
        int year = Horario.get(Calendar.YEAR);
        int mes = Horario.get(Calendar.MONTH)+1;
        int fecha = Horario.get(Calendar.DATE);
        int hora = Horario.get(Calendar.HOUR_OF_DAY);
        int minuto = Horario.get(Calendar.MINUTE);
        int segundo = Horario.get(Calendar.SECOND);
        
        try {
            String direccion = "www.youtube.com";
            
            FileWriter escribir = new FileWriter(historial, true);
            escribir.write(fecha+"/"+mes+"/"+year+"   -  "+hora+":"+minuto +":"+segundo+"  ------------>"+direccion +" --\n");
            escribir.close();
            
            Desktop.getDesktop().browse(new URI("http://www.youtube.com/"));
        } catch (URISyntaxException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_btnYouTubeActionPerformed

    private void btnWikiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWikiActionPerformed
        Calendar Horario = Calendar.getInstance();
        int year = Horario.get(Calendar.YEAR);
        int mes = Horario.get(Calendar.MONTH)+1;
        int fecha = Horario.get(Calendar.DATE);
        int hora = Horario.get(Calendar.HOUR_OF_DAY);
        int minuto = Horario.get(Calendar.MINUTE);
        int segundo = Horario.get(Calendar.SECOND);
        
        try {
            String direccion = "www.wikipedia.com";
           
            
            FileWriter escribir = new FileWriter(historial, true);
            escribir.write(fecha+"/"+mes+"/"+year+"   -  "+hora+":"+minuto +":"+segundo+"  ------------>"+direccion +" --\n");
            escribir.close();
            
            Desktop.getDesktop().browse(new URI("http://www.wikipedia.com/"));
        } catch (URISyntaxException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    }//GEN-LAST:event_btnWikiActionPerformed

    private void btnFacebookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFacebookActionPerformed
        Calendar Horario = Calendar.getInstance();
        int year = Horario.get(Calendar.YEAR);
        int mes = Horario.get(Calendar.MONTH)+1;
        int fecha = Horario.get(Calendar.DATE);
        int hora = Horario.get(Calendar.HOUR_OF_DAY);
        int minuto = Horario.get(Calendar.MINUTE);
        int segundo = Horario.get(Calendar.SECOND);
        
        try {
            String direccion = "www.facebook.com";
            

            FileWriter escribir = new FileWriter(historial, true);
            escribir.write(fecha+"/"+mes+"/"+year+"   -  "+hora+":"+minuto +":"+segundo+"  ------------>"+direccion +" --\n");
            escribir.close();
            
            Desktop.getDesktop().browse(new URI("http://www.facebook.com/"));
        } catch (URISyntaxException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    }//GEN-LAST:event_btnFacebookActionPerformed

    private void btnProbandoPyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProbandoPyActionPerformed
        Calendar Horario = Calendar.getInstance();
        int year = Horario.get(Calendar.YEAR);
        int mes = Horario.get(Calendar.MONTH)+1;
        int fecha = Horario.get(Calendar.DATE);
        int hora = Horario.get(Calendar.HOUR_OF_DAY);
        int minuto = Horario.get(Calendar.MINUTE);
        int segundo = Horario.get(Calendar.SECOND);
        
        FileWriter escribir = null;
        String direccion = "www.probandopython.com.ar";
        try {
            
            escribir = new FileWriter(historial, true);
            escribir.write(fecha+"/"+mes+"/"+year+"   -  "+hora+":"+minuto +":"+segundo+"  ------------>"+direccion +" --\n");
            escribir.close();
            Desktop.getDesktop().browse(new URI("http://probandopython.com.ar/"));

        } catch (URISyntaxException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                escribir.close();
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            
    }//GEN-LAST:event_btnProbandoPyActionPerformed

    private void btnTwitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTwitterActionPerformed
        Calendar Horario = Calendar.getInstance();
        int year = Horario.get(Calendar.YEAR);
        int mes = Horario.get(Calendar.MONTH)+1;
        int fecha = Horario.get(Calendar.DATE);
        int hora = Horario.get(Calendar.HOUR_OF_DAY);
        int minuto = Horario.get(Calendar.MINUTE);
        int segundo = Horario.get(Calendar.SECOND);
        
        try {
            String direccion = "www.twitter.com";

            FileWriter escribir = new FileWriter(historial, true);
            escribir.write(fecha+"/"+mes+"/"+year+"   -  "+hora+":"+minuto +":"+segundo+"  ------------>"+direccion +" --\n");
            escribir.close();
            
            Desktop.getDesktop().browse(new URI("https://www.twitter.com/"));
        } catch (URISyntaxException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        
    }//GEN-LAST:event_btnTwitterActionPerformed

    private void cmbMailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbMailKeyPressed
    }//GEN-LAST:event_cmbMailKeyPressed

    private void cmbMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMailActionPerformed
        Calendar Horario = Calendar.getInstance();
        int year = Horario.get(Calendar.YEAR);
        int mes = Horario.get(Calendar.MONTH)+1;
        int fecha = Horario.get(Calendar.DATE);
        int hora = Horario.get(Calendar.HOUR_OF_DAY);
        int minuto = Horario.get(Calendar.MINUTE);
        int segundo = Horario.get(Calendar.SECOND);
        
        String mail = "" + cmbMail.getSelectedItem();
        if (mail.equalsIgnoreCase("Hotmail")) {
            FileWriter escribir = null;
            try {
                escribir = new FileWriter(historial, true);
                escribir.write(fecha+"/"+mes+"/"+year+"   -  "+hora+":"+minuto +":"+segundo+"  ------------>"+mail +" --\n");
                escribir.close();
                try {
                    try {
                        Desktop.getDesktop().browse(new URI("https://login.live.com/login.srf?wa=wsignin1.0&rpsnv=11&ct=1370955137&rver=6.1.6206.0&wp=MBI&wreply=http:%2F%2Fmail.live.com%2Fdefault.aspx&lc=3082&id=64855&mkt=es-es&cbcxt=mai&snsc=1"));
                    } catch (IOException ex) {
                        Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (URISyntaxException ex) {
                    Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    escribir.close();
                } catch (IOException ex) {
                    Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        if (mail.equalsIgnoreCase("Gmail")) {
            try {
                FileWriter escribir = null;
                escribir = new FileWriter(historial, true);
                escribir.write(hora+":"+minuto +":"+segundo+"  ------------>"+mail +" --\n");
                escribir.close();
                try {
                    try {
                        Desktop.getDesktop().browse(new URI("https://accounts.google.com/ServiceLogin?service=mail&passive=true&rm=false&continue=https://mail.google.com/mail/&ss=1&scc=1&ltmpl=default&ltmplcache=2"));
                    } catch (IOException ex) {
                        Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (URISyntaxException ex) {
                    Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (mail.equalsIgnoreCase("Yahoo")) {
            try {
                FileWriter escribir = null;
                    escribir = new FileWriter(historial, true);
                    escribir.write(hora+":"+minuto +":"+segundo+"  ------------>"+mail +" --\n");
                    escribir.close();
                try {
                    try {
                        Desktop.getDesktop().browse(new URI("http://ar.yahoo.com/"));
                    } catch (IOException ex) {
                        Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (URISyntaxException ex) {
                    Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            
        }
    }//GEN-LAST:event_cmbMailActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
    }//GEN-LAST:event_btnExportarActionPerformed

    private void txtHistorialMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtHistorialMouseMoved
    }//GEN-LAST:event_txtHistorialMouseMoved

    private void txtHistorialMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtHistorialMouseEntered
        
        
        String sHistorial = "";
        


        try {
            FileReader lector = new FileReader("Historial.txt");
            BufferedReader contenido = new BufferedReader(lector);
            try {

                
                String linea = contenido.readLine();
                

                while ((txthistorial = linea) != null) {
                    sHistorial +=  linea + "\n";
                    linea = contenido.readLine();
                }
                if (!txtHistorial.getText().equals(txthistorial)) {
                    txtHistorial.setText("");
                    txtHistorial.setText(sHistorial);

                }


            } catch (IOException ex) {
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_txtHistorialMouseEntered

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
     
        txtHistorial.setText("");
        boolean delete = historial.delete();

    }//GEN-LAST:event_btnLimpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnFacebook;
    private javax.swing.JButton btnGoogle;
    private javax.swing.JButton btnIr;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnProbandoPy;
    private javax.swing.JButton btnTwitter;
    private javax.swing.JButton btnWiki;
    private javax.swing.JButton btnYouTube;
    private javax.swing.JComboBox cmbMail;
    private javax.swing.JComboBox cmbProtocolo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblUrl;
    private javax.swing.JTextArea txtHistorial;
    private javax.swing.JTextField txtUrl;
    // End of variables declaration//GEN-END:variables

    
    
}

